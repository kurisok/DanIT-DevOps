Started by user fAdmin iAdmin o Admin
[Pipeline] Start of Pipeline
[Pipeline] node
Running on jenkins-worker in /home/vagrant/jenkins/workspace/danit-docker-pipeline
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Pull Code)
[Pipeline] git
The recommended git tool is: NONE
No credentials specified
Fetching changes from the remote Git repository
Checking out Revision 467327f3139378d1d57d855ba3b48a47ef267afe (refs/remotes/origin/main)
Commit message: "Create README.md"
 > git rev-parse --resolve-git-dir /home/vagrant/jenkins/workspace/danit-docker-pipeline/.git # timeout=10
 > git config remote.origin.url https://github.com/kurisok/forStep2.git # timeout=10
Fetching upstream changes from https://github.com/kurisok/forStep2.git
 > git --version # timeout=10
 > git --version # 'git version 2.34.1'
 > git fetch --tags --force --progress -- https://github.com/kurisok/forStep2.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/main^{commit} # timeout=10
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 467327f3139378d1d57d855ba3b48a47ef267afe # timeout=10
 > git branch -a -v --no-abbrev # timeout=10
 > git branch -D main # timeout=10
 > git checkout -b main 467327f3139378d1d57d855ba3b48a47ef267afe # timeout=10
 > git rev-list --no-walk 467327f3139378d1d57d855ba3b48a47ef267afe # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Docker Image)
[Pipeline] script
[Pipeline] {
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker build -t my-image .
DEPRECATED: The legacy builder is deprecated and will be removed in a future release.
            Install the buildx component to build images with BuildKit:
            https://docs.docker.com/go/buildx/

Sending build context to Docker daemon  79.87kB

Step 1/8 : FROM node:14
 ---> 1d12470fa662
Step 2/8 : WORKDIR /app
 ---> Using cache
 ---> 4f56c61cde1c
Step 3/8 : COPY package*.json ./
 ---> Using cache
 ---> 082d558e92fa
Step 4/8 : RUN npm install
 ---> Using cache
 ---> 2cd65bb28764
Step 5/8 : COPY . .
 ---> 3e37fe696d51
Step 6/8 : EXPOSE 3000
 ---> Running in 387dc35c6fc3
 ---> Removed intermediate container 387dc35c6fc3
 ---> 390b9b48f764
Step 7/8 : ENTRYPOINT ["npm"]
 ---> Running in 67143062611e
 ---> Removed intermediate container 67143062611e
 ---> 8a0341439c55
Step 8/8 : CMD ["start"]
 ---> Running in 7aca0c1f9296
 ---> Removed intermediate container 7aca0c1f9296
 ---> da92c0b4c12c
Successfully built da92c0b4c12c
Successfully tagged my-image:latest
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Run Tests)
[Pipeline] script
[Pipeline] {
[Pipeline] isUnix
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker inspect -f . my-image
.
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] withDockerContainer
jenkins-worker does not seem to be running inside a container
$ docker run -t -d -u 1000:1000 -w /home/vagrant/jenkins/workspace/danit-docker-pipeline -v /home/vagrant/jenkins/workspace/danit-docker-pipeline:/home/vagrant/jenkins/workspace/danit-docker-pipeline:rw,z -v /home/vagrant/jenkins/workspace/danit-docker-pipeline@tmp:/home/vagrant/jenkins/workspace/danit-docker-pipeline@tmp:rw,z -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** -e ******** my-image cat
$ docker top 9f4e282923fd8ef475998e118d5e4a120f1577b10e0496c86f7b61f4885abbd5 -eo pid,comm
ERROR: The container started but didn't run the expected command. Please double check your ENTRYPOINT does execute the command passed as docker run argument, as required by official docker images (see https://github.com/docker-library/official-images#consistency for entrypoint consistency requirements).
Alternatively you can force image entrypoint to be disabled by adding option `--entrypoint=''`.
[Pipeline] {
[Pipeline] sh
+ npm test
wrapper script does not seem to be touching the log file in /home/vagrant/jenkins/workspace/danit-docker-pipeline@tmp/durable-492a01c8
(JENKINS-48300: if on an extremely laggy filesystem, consider -Dorg.jenkinsci.plugins.durabletask.BourneShellScript.HEARTBEAT_CHECK_INTERVAL=86400)
[Pipeline] }
$ docker stop --time=1 9f4e282923fd8ef475998e118d5e4a120f1577b10e0496c86f7b61f4885abbd5
$ docker rm -f --volumes 9f4e282923fd8ef475998e118d5e4a120f1577b10e0496c86f7b61f4885abbd5
[Pipeline] // withDockerContainer
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Push to Docker Hub)
Stage "Push to Docker Hub" skipped due to earlier failure(s)
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
ERROR: script returned exit code -1
Finished: FAILURE